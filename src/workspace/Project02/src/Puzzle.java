/*
 * Puzzle.java
 *
 * Version:
 * $Id: Puzzle.java,v 1.2 2013/04/18 15:32:50 vxd9797 Exp $
 *
 * Revisions:
 * $Log: Puzzle.java,v $
 * Revision 1.2  2013/04/18 15:32:50  vxd9797
 * Final Version - Checked and modified the solver. Finished commenting the water.
 *
 * Revision 1.1  2013/04/17 21:26:49  vxd9797
 * Initial Version
 *
 */

import java.util.ArrayList;
/**
 * @author Giovanni Carvelli grc5969
 * @author Vu Dinh vxd9797
 * 
 * Puzzle interface contains 3 methods that are common to all puzzles
 * that the solver will use.
 *
 */
public interface Puzzle <E> {
    /**
     * Returns whether or not the provided config is the goal
     * 
     * @param config a configuration representing a state of the puzzle
     * @return boolean
     */
    public boolean isGoal(E config);
    /**
     * Takes in a config generated by the solver.java
     * class and returns the neighbors of that config
     * (places it could go next)
     * 
     * @param config configuration produced by the solver
     * @return neighbors Arraylist of neighbor configs
     */
    public ArrayList <E> getNeighbors(E config);
    /**
     * Returns the start location for the solver algorithm
     * 
     * @return location
     */
    public E getStart();
}